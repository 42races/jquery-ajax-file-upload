// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function($) {
    var Uploader;
    Uploader = (function() {
      function Uploader(container, opts) {
        var browse, filefield, list, nodes,
          _this = this;
        this.container = container;
        this.opts = opts;
        this.upload = __bind(this.upload, this);
        this.handleFileSelection = __bind(this.handleFileSelection, this);
        console.log(this.opts);
        browse = "<a href='javascript:void(0);' class='" + this.opts.browse_class + "'>" + this.opts.browse_text + "</a>";
        filefield = "<input type='file' hidden multiple=" + this.opts.multiple + "></input>";
        list = "<ul class='" + this.opts.list_class + "'></ul>";
        this.container.append(browse);
        this.container.append(filefield);
        this.container.append(list);
        nodes = this.container.children();
        this.browse = $(nodes[0]);
        this.filefield = $(nodes[1]);
        this.list = $(nodes[2]);
        this.browse.bind("click", function() {
          return _this.filefield.click();
        });
        this.filefield.bind("change", this.handleFileSelection);
        $(".list").on("click", ".delete-link", function(evt) {
          var delete_link;
          evt.preventDefault();
          delete_link = $(evt.target);
          return $.ajax({
            url: delete_link.data("path"),
            type: "DELETE",
            success: function(data) {
              console.log("success");
              return delete_link.parent().remove();
            },
            error: function(data) {
              return console.log("error");
            }
          });
        });
      }

      Uploader.prototype.handleFileSelection = function(evt) {
        var files,
          _this = this;
        files = evt.target.files;
        return $(files).each(function(i, file) {
          var item;
          item = "<li><div><span>" + file.name + "</span>&nbsp;<span>" + (_this.toSize(file.size)) + "</span></div><div><progress hidden></progress></div></li>";
          _this.list.append(item);
          return _this.upload(file, _this.list.children().last());
        });
      };

      Uploader.prototype.toSize = function(size) {
        var unit, units;
        units = ["KB", "MB", "GB"];
        unit = "BYTES";
        while (size > 1000) {
          size = size / 1000.0;
          unit = units.shift();
        }
        size = Math.round(size);
        return size + " " + unit;
      };

      Uploader.prototype.upload = function(file, li) {
        var fd, progress, xhr,
          _this = this;
        xhr = new XMLHttpRequest();
        fd = new FormData();
        progress = li.children().last().children().first();
        progress.show();
        fd.append("filename", escape(file.name));
        fd.append("size", file.size);
        fd.append("file", file);
        xhr.open("POST", this.opts.upload_path, true);
        xhr.onload = function() {
          if (xhr.status === 200) {
            return _this.processResponse(xhr.responseText, li);
          } else {
            return console.log("failed " + xhr.status);
          }
        };
        xhr.upload.onprogress = function(e) {
          progress.show();
          if (e.lengthComputable) {
            return progress.val(e.loaded / e.total);
          }
        };
        return xhr.send(fd);
      };

      Uploader.prototype.processResponse = function(response_text, li) {
        var delete_link, response;
        response = JSON.parse(response_text);
        if (response.delete_path) {
          delete_link = "<a id='" + response.id + "' class='delete-link' data-path='" + response.delete_path + "' href='javascript:void(0);' >delete</a>";
          return li.append(delete_link);
        }
      };

      return Uploader;

    })();
    $.fn.ajaxUpload = function(options) {
      options = $.extend({}, $.fn.ajaxUpload.default_options, options);
      return new Uploader(this, options);
    };
    return $.fn.ajaxUpload.default_options = {
      upload_path: "/",
      browse_text: "browse",
      browse_class: "browse",
      list_class: "list",
      progress_class: "progressbar",
      multiple: true
    };
  })(jQuery);

}).call(this);
